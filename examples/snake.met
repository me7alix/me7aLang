import "std.met"
import "raylib.met"

#MAP_W 20
#MAP_H 20
#TILE  30

apple_x: int
apple_y: int

snake_x:   [1024]int
snake_y:   [1024]int
snake_dx:  int
snake_dy:  int
snake_len: iptr

draw_snake() {
	for i: iptr = 0; i < snake_len; i+=1 {
		rl_draw_rect(snake_x[i] * TILE, snake_y[i] * TILE, TILE, TILE, rl_ColorGreen)
	}
}

draw_apple() {
	rl_draw_rect(apple_x * TILE, apple_y * TILE, TILE, TILE, rl_ColorRed)
}

snake_follow() {
	for i: iptr = snake_len; i >= 1; i-=1 {
		snake_x[i] = snake_x[i - 1]
		snake_y[i] = snake_y[i - 1]
	}
}

apple_set_rand_pos() {
	apple_x = rand() % MAP_W
	apple_y = rand() % MAP_H
}

snake_eat_apple() {
	if snake_x[0] == apple_x && snake_y[0] == apple_y {
		apple_set_rand_pos()
		snake_x[snake_len] = snake_x[snake_len - 1]
		snake_y[snake_len] = snake_y[snake_len - 1]
		snake_len += 1
	}
}

is_game_over(): bool {
	for i: iptr = snake_len; i >= 1; i-=1 {
		if snake_x[0] == snake_x[i] && snake_y[0] == snake_y[i] {
			return true
		}
	}

	return false
}

snake_set_dir() {
	if rl_is_key_down(rl_KeyS) && snake_dy == 0 {
		snake_dx = 0
		snake_dy = 1
	}

	if rl_is_key_down(rl_KeyW) && snake_dy == 0 {
		snake_dx = 0
		snake_dy = -1
	}

	if rl_is_key_down(rl_KeyD) && snake_dx == 0 {
		snake_dx = 1
		snake_dy = 0
	}

	if rl_is_key_down(rl_KeyA) && snake_dx == 0 {
		snake_dx = -1
		snake_dy = 0
	}
}

snake_movement() {
	snake_follow()
	snake_x[0] += snake_dx
	snake_y[0] += snake_dy

	if snake_x[0] == MAP_W {
		snake_x[0] = 0
	} else if snake_x[0] == -1 {
		snake_x[0] = MAP_W - 1
	} else if snake_y[0] == MAP_H {
		snake_y[0] = 0
	} else if snake_y[0] == -1 {
		snake_y[0] = MAP_H - 1
	}
}

game_init() {
	apple_set_rand_pos()
	snake_len = 2
	snake_x[0] = 1
	snake_y[0] = 0
	snake_x[1] = 0
	snake_y[1] = 0
	snake_dx = 1
	snake_dy = 0
}

main(): int {
	srand(time(null))
	game_init()

	rl_init_window(MAP_W * TILE, MAP_H * TILE, "Snake")
	rl_set_target_fps(60)

	timer := 0
	new_game := false
	while !rl_window_should_close() {
		rl_begin_drawing()
		rl_clear_bg(rl_ColorBlack)

		if new_game {
			if rl_is_key_down(rl_KeySpace) {
				game_init()
				new_game = false
			}
		} else {
			snake_set_dir()

			if timer % 12 == 0 {
				snake_movement()

				if is_game_over() {
					new_game = true
					continue
				}

				snake_eat_apple()
				timer = 0
			}
		}

		draw_snake()
		draw_apple()

		timer += 1
		rl_end_drawing()
	}

	rl_close_window()
	return 0
}
